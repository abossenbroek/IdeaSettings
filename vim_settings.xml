<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/Python Console" timestamp="1492766041619">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" timestamp="1492534100782">
        <mark key="'" line="43" column="36" />
        <mark key="[" line="39" column="0" />
        <mark key="]" line="39" column="0" />
        <mark key="^" line="41" column="7" />
        <mark key="." line="39" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/resources/claims_generated.csv" timestamp="1492539362375">
        <mark key="[" line="0" column="33" />
        <mark key="]" line="0" column="46" />
      </file>
      <file name="/a.dummy" timestamp="1487933030978">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Tutorials/dl4j-examples/dl4j-examples/pom.xml" timestamp="1491921002177">
        <mark key="'" line="65" column="26" />
        <mark key="[" line="41" column="0" />
        <mark key="]" line="59" column="27" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/resources/training_data/dummy_data.csv" timestamp="1492536115316">
        <mark key="[" line="5" column="39" />
        <mark key="]" line="5" column="39" />
        <mark key="." line="5" column="39" />
        <mark key="^" line="0" column="27" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/__init__.py" timestamp="1492544326082">
        <mark key="[" line="6" column="14" />
        <mark key="]" line="6" column="14" />
        <mark key="." line="6" column="14" />
        <mark key="^" line="0" column="8" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/data_conversion.py" timestamp="1492544405231">
        <mark key="[" line="2" column="75" />
        <mark key="]" line="4" column="12" />
        <mark key="^" line="4" column="12" />
        <mark key="." line="4" column="12" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" timestamp="1492767580807">
        <mark key="'" line="95" column="35" />
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="20" />
        <mark key="." line="3" column="20" />
        <mark key="^" line="3" column="20" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/resources/training_data/claims_generated.csv" timestamp="1492586154579">
        <mark key="[" line="7" column="34" />
        <mark key="]" line="7" column="34" />
        <mark key="." line="7" column="34" />
      </file>
      <file name="$USER_HOME$/Tutorials/dl4j-examples/dl4j-examples/src/main/java/org/deeplearning4j/examples/unsupervised/deepbelief/DeepAutoEncoderExample.java" timestamp="1491919544331">
        <mark key="[" line="30" column="0" />
        <mark key="]" line="40" column="83" />
      </file>
      <file name="/HTML File.txt.ft" timestamp="1492534541793">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" timestamp="1492536629662">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="47" column="39" />
        <mark key="]" line="47" column="45" />
        <mark key="^" line="47" column="45" />
        <mark key="." line="47" column="45" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator/rv_mapping.py" timestamp="1492768704745">
        <mark key="'" line="74" column="4" />
        <mark key="[" line="74" column="74" />
        <mark key="]" line="74" column="74" />
        <mark key="^" line="74" column="74" />
        <mark key="." line="74" column="74" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/etl.py" timestamp="1492544114738">
        <mark key="'" line="21" column="60" />
        <mark key="[" line="5" column="0" />
        <mark key="]" line="6" column="0" />
        <mark key="^" line="6" column="0" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/src/main/java/org/datavec/transform/basic/BasicDataVecExample.java" timestamp="1492532090287">
        <mark key="'" line="7" column="43" />
        <mark key="[" line="124" column="0" />
        <mark key="]" line="128" column="41" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" timestamp="1492536214732">
        <mark key="a" line="44" column="34" />
        <mark key="'" line="23" column="54" />
        <mark key="j" line="42" column="35" />
        <mark key="[" line="18" column="8" />
        <mark key="]" line="20" column="48" />
        <mark key="." line="16" column="0" />
      </file>
      <file name="$USER_HOME$/Tutorials/dl4j-examples/dl4j-examples/src/main/java/org/deeplearning4j/examples/dataexamples/CSVExample.java" timestamp="1492534736645">
        <mark key="'" line="36" column="12" />
        <mark key="[" line="4" column="0" />
        <mark key="]" line="5" column="45" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator/__init__.py" timestamp="1492538278848">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1" column="39" />
      </file>
      <file name="/fragment.java" timestamp="1492089668090">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/data_etl.py" timestamp="1492538170349">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="^" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="C:/tools/Anaconda3/envs/theano35/Lib/site-packages/sklearn/utils/validation.py" timestamp="1492542198838" />
    </filemarks>
    <jumps>
      <jump line="54" column="49" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="52" column="15" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="55" column="51" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="17" column="0" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="32" column="42" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="64" column="39" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="226" column="0" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="107" column="48" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="19" column="47" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="106" column="24" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="23" column="54" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="94" column="48" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="190" column="0" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="215" column="31" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="48" column="6" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="40" column="22" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="0" column="0" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="114" column="47" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="121" column="13" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="18" column="32" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="21" column="46" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="110" column="25" filename="$USER_HOME$/PycharmProjects/257/pom.xml" />
      <jump line="12" column="0" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="71" column="44" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="74" column="0" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="18" column="33" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="47" column="20" filename="$USER_HOME$/PycharmProjects/257/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="63" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="86" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="66" column="34" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="17" column="33" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="102" column="1" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/src/main/java/org/datavec/transform/basic/BasicDataVecExample.java" />
      <jump line="131" column="0" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/src/main/java/org/datavec/transform/basic/BasicDataVecExample.java" />
      <jump line="107" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="6" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="96" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="78" column="8" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="5" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="7" column="42" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="91" column="66" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="9" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="84" column="8" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="18" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="169" column="40" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="135" column="5" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="20" column="48" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="21" column="54" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="30" column="0" filename="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" />
      <jump line="27" column="48" filename="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" />
      <jump line="28" column="54" filename="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" />
      <jump line="48" column="21" filename="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" />
      <jump line="89" column="30" filename="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" />
      <jump line="0" column="0" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/pom.xml" />
      <jump line="24" column="31" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/pom.xml" />
      <jump line="23" column="32" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/pom.xml" />
      <jump line="14" column="0" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/src/main/java/org/datavec/transform/basic/BasicDataVecExample.java" />
      <jump line="103" column="0" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/src/main/java/org/datavec/transform/basic/BasicDataVecExample.java" />
      <jump line="143" column="82" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/src/main/java/org/datavec/transform/basic/BasicDataVecExample.java" />
      <jump line="7" column="43" filename="$USER_HOME$/Tutorials/dl4j-examples/datavec-examples/src/main/java/org/datavec/transform/basic/BasicDataVecExample.java" />
      <jump line="50" column="9" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="110" column="21" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="118" column="31" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="25" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="36" column="9" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="0" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="22" column="48" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="29" column="54" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="84" column="8" filename="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" />
      <jump line="43" column="36" filename="$USER_HOME$/Tutorials/dl4j-examples/pom.xml" />
      <jump line="61" column="38" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="47" column="39" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="39" column="12" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="3" column="0" filename="$USER_HOME$/Tutorials/dl4j-examples/dl4j-examples/src/main/java/org/deeplearning4j/examples/dataexamples/CSVExample.java" />
      <jump line="36" column="12" filename="$USER_HOME$/Tutorials/dl4j-examples/dl4j-examples/src/main/java/org/deeplearning4j/examples/dataexamples/CSVExample.java" />
      <jump line="57" column="12" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="6" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/resources/training_data/dummy_data.csv" />
      <jump line="40" column="15" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="117" column="9" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="119" column="32" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="23" column="54" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/pom.xml" />
      <jump line="55" column="46" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="0" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/src/main/java/com/bain/MedicalClaimFaultDetection/AutoEncoder.java" />
      <jump line="4" column="14" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/etl.py" />
      <jump line="12" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/etl.py" />
      <jump line="11" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/etl.py" />
      <jump line="18" column="9" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/etl.py" />
      <jump line="19" column="80" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/etl.py" />
      <jump line="20" column="60" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/autoencoder/etl.py" />
      <jump line="79" column="21" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="9" column="51" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="77" column="60" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator/rv_mapping.py" />
      <jump line="47" column="8" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="53" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="81" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="5" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="50" column="57" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="74" column="4" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator/rv_mapping.py" />
      <jump line="93" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="4" column="0" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
      <jump line="95" column="35" filename="$USER_HOME$/PycharmProjects/GRC_Fraud_detection/Python/DRG_mock_data_generator.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>import tqdm</text>
      </register>
      <register name="-" type="4">
        <text>import tqdm</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxkYXlzX292ZXJcPg==</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgIGxvZ2dlci5pbmZvKCdTdG9yZSBjbGFpbXMgdG8gY3N2IGZpbGUnKQo=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgIAo=</text>
      </register>
      <register name="2" type="4">
        <text encoding="base64">Rk9STUFUID0gJyUoYXNjdGltZSktMTVzICUobWVzc2FnZSlzJwpsb2dnaW5nLmJhc2ljQ29uZmlnKGZvcm1hdD1GT1JNQVQpCmxvZ2dlciA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKCdEUkdfZGF0YV9nZW5lcmF0b3InKQo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgIHByaW50KHR5cGUoZGlzbWlzc19kYXkpKQo=</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgIHByaW50KHR5cGUoZHVyYXRpb24pKQo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgIHByaW50KHR5cGUoY29zdHMpKQo=</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgIHByaW50KHR5cGUoZHJnKSkK</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxkYXlzX292ZXJcPg==</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxkYXlzX292ZXJcPg==</last-pattern>
      <last-replace>dismiss_day</last-replace>
      <last-substitute>drg</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>scala.bina</entry>
        <entry>efx</entry>
        <entry>javafx</entry>
        <entry>scala.binary</entry>
        <entry>dismissal_day</entry>
        <entry encoding="base64">XDxkaXNzbWlzYWxfZGF5XD4=</entry>
        <entry>dismissal</entry>
        <entry encoding="base64">XDxkaXNzbWlzYWxEYXlcPg==</entry>
        <entry>dismissalDay</entry>
        <entry encoding="base64">XDxudW1MaW5lc1RvU2tpcFw+</entry>
        <entry>numLines</entry>
        <entry>CSV</entry>
        <entry encoding="base64">XDxkZWxpbWl0ZXJcPg==</entry>
        <entry>Spark ver</entry>
        <entry>spark</entry>
        <entry>scala</entry>
        <entry>claims_gene</entry>
        <entry>hospital</entry>
        <entry>drg</entry>
        <entry encoding="base64">XDxkYXlzX292ZXJcPg==</entry>
      </history-search>
      <history-cmd>
        <entry>:w</entry>
        <entry>%s/Dropout(0.5)/Dropout(0.001)/g</entry>
        <entry encoding="base64">JzwsJz5zL2lucHV0X2RpbS9zaGFwZS9n</entry>
        <entry encoding="base64">JzwsJz5zLy5hZGQoLyA9IC9n</entry>
        <entry encoding="base64">JzwsJz5zL2ZyYXVkX21vZGVsL2ZyYXVkL2c=</entry>
        <entry encoding="base64">JzwsJz5zL0Rpc21pc3NhbF9kYXkvRFJHX01haW5fY2xhc3MvZw==</entry>
        <entry>%s/mul/dot/g</entry>
        <entry>%s/mul/concat/g</entry>
        <entry encoding="base64">JzwsJz5zL2Nvc3RzL2hvc3BpdGFsL2c=</entry>
        <entry encoding="base64">JzwsJz5zL2RyZ19tYWluL2Nvc3RzL2c=</entry>
        <entry encoding="base64">JzwsJz5zL2hvc3BpdGFsX3dpdGhfZnJhdWQvaG9zcGl0YWxzX3dfZnJhdWQvZw==</entry>
        <entry encoding="base64">JzwsJz5zL2VuY29kZXIvZW5jL2c=</entry>
        <entry>%s/Convolution2D/Conv2D/g</entry>
        <entry>%s/W_re/kernel_re/g</entry>
        <entry encoding="base64">JzwsJz5zL2lucHV0RGF0YVNjaGVtYS9zY2hlbWEvZw==</entry>
        <entry encoding="base64">JzwsJz53</entry>
        <entry>q</entry>
        <entry encoding="base64">JzwsJz5zL2hvc3BpdGFsL2RyZy9n</entry>
        <entry encoding="base64">JzwsJz5zL2RyZy9kaXNtaXNzX2RheS9n</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>